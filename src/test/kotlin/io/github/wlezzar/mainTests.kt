/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.github.wlezzar

import io.github.wlezzar.jsql.sql.InlineSource
import io.github.wlezzar.jsql.sql.JsonTable
import io.github.wlezzar.jsql.sql.json
import io.github.wlezzar.jsql.sql.sql
import io.kotest.core.spec.style.ExpectSpec
import io.kotest.matchers.shouldBe

class MainTest : ExpectSpec({

    context("With some json data") {
        val table = JsonTable(
            InlineSource(
                listOf(
                    """{"id": 1, "name": "person1", "job": "IT", "siblings": [{"id": 3}, {"id": 2}]}""",
                    """{"id": 2, "name": "person2", "job": "Doctor", "siblings": [{"id": 4}]}""",
                    """{"id": 3, "name": "person3", "job": "Doctor", "siblings": []}""",
                    """{"id": 4, "name": "person4", "job": "IT", "siblings": []}""",
                    """{"id": 5, "name": "person5", "job": "IT", "siblings": [{"id": 1}]}"""
                ).map(json::readTree)
            )
        )

        expect("counts are correct") {
            sql(table) {
                executeQuery("SELECT COUNT(*) AS total FROM data")
            } shouldBe listOf("""{"total": 5.0}""".toJsonNode())
        }

        expect("selects are correct") {
            sql(table) { executeQuery("SELECT name FROM data") }
                .map { it["name"]?.asText() }
                .toSet().shouldBe(
                    setOf(
                        "person1",
                        "person2",
                        "person3",
                        "person4",
                        "person5"
                    )
                )
        }

        expect("aggregations are correct") {
            sql(table) { executeQuery("SELECT job, COUNT(*) AS total FROM data GROUP BY job") }
                .toSet()
                .shouldBe(
                    setOf(
                        """{"job": "IT", "total": 3.0}""".toJsonNode(),
                        """{"job": "Doctor", "total": 2.0}""".toJsonNode()
                    )
                )
        }
    }


})
